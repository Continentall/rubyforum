<% currently_at t('menu.topics')%>
<% provide :page_title, t('.topic')%>
<h1 class="text-center mb-4">
    <%= @topic.title%> 
</h1>
<time datetime="<%= @topic.formatted_created_at%>">
    <small><%= @topic.formatted_created_at %></small>
</time>
<div class = "lead my-3">
    <%= sanitize @topic.body %> <!-- sanitize  - хелпер который удаляет с текста все небезопасные тэги html -->
</div>

<div class="mb-3">
    <%= @topic.user.gravatar %>
    <%= @topic.user.name_or_email %>
</div>

    <%= render 'comments/commentable', commentable: @topic, comment: @comment, html_id: 'topicsComments' %>
    <!--@comment у нас вообще-то не существует, но мы что-то передаем, что бы если валидация не пройдет у нас было значение nil, а не пустота -->

    <div class="border-top border-bottom py-3 mt-3">
        <div class="btn-group">
            <!-- В перфиксах очень просто запуться, смотри их в rails/routes -->
            <% if policy(@topic).edit? %>
                <%= link_to t('.edit'), edit_topic_path(@topic.id), class: 'btn btn-outline-dark' %> <!--Префикс edit_topic_path генерируется сам, но ему еще надо передать топик :ID -->  
            <% end %>
            <% if policy(@topic).destroy? %>
                <%= link_to t('.delete'), topic_path(@topic.id),class: 'btn btn-outline-dark', data: {method: :delete, confirm: t('.confirm')} %> <!-- В этому случае не нужно дать POST запрос на страницу вопросов, а нужно дать DELETE запрос  -->
            <% end %>
        </div>
    </div>
<%= render 'messages/form' %>

<h2 class="mt-5"><%= t('.messages') %></h2>

<%= pagination @pagy %> 

<%= render partial: 'messages/message', collection: @messages, as: :message, locals: {local_topic: @topic} %> 
<!-- Упрощенная версия form_with для паршала -->
<!-- Говорим что рендерим паршал, даем его путь, указываем имя колекции для которой мы его ренднрим  -->
<!-- Указываем нашу переменную итератор message и передаем в паршал локальную переменную local_topic -->
<%= pagination @pagy %> 